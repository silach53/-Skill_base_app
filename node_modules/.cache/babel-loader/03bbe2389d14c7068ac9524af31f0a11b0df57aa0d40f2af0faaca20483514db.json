{"ast":null,"code":"var _jsxFileName = \"/Users/workalexandr/Desktop/Demo/demo-app/src/TodoList.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoCard = _ref => {\n  _s();\n  let {\n    todo,\n    toggleTodo,\n    deleteTodo,\n    index\n  } = _ref;\n  const [dueDate, setDueDate] = useState(todo.dueDate);\n  const [skill, setSkill] = useState(todo.skill);\n  const updateTodo = (field, value) => {\n    if (field === 'dueDate') {\n      setDueDate(value);\n    } else if (field === 'skill') {\n      setSkill(value);\n    }\n    todo[field] = value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-text\",\n      style: {\n        textDecoration: todo.completed ? 'line-through' : ''\n      },\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Due Date\",\n      value: dueDate,\n      onChange: e => updateTodo('dueDate', e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Skill\",\n      value: skill,\n      onChange: e => updateTodo('skill', e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        float: 'right'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleTodo(index),\n        children: \"Toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTodo(index),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n_s(TodoCard, \"Lfi9Fs6dZGxdjtaE31ddQkeF8Cg=\");\n_c = TodoCard;\nvar _c;\n$RefreshReg$(_c, \"TodoCard\");","map":{"version":3,"names":["TodoCard","_ref","_s","todo","toggleTodo","deleteTodo","index","dueDate","setDueDate","useState","skill","setSkill","updateTodo","field","value","_jsxDEV","className","children","style","textDecoration","completed","text","fileName","_jsxFileName","lineNumber","columnNumber","description","placeholder","onChange","e","target","display","float","onClick","_c","$RefreshReg$"],"sources":["/Users/workalexandr/Desktop/Demo/demo-app/src/TodoList.js"],"sourcesContent":["const TodoCard = ({ todo, toggleTodo, deleteTodo, index }) => {\n    const [dueDate, setDueDate] = useState(todo.dueDate);\n    const [skill, setSkill] = useState(todo.skill);\n  \n    const updateTodo = (field, value) => {\n      if (field === 'dueDate') {\n        setDueDate(value);\n      } else if (field === 'skill') {\n        setSkill(value);\n      }\n      todo[field] = value;\n    };\n  \n    return (\n      <div className=\"todo-card\">\n        <div\n          className=\"task-text\"\n          style={{ textDecoration: todo.completed ? 'line-through' : '' }}\n        >\n          {todo.text}\n        </div>\n        <div>{todo.description}</div>\n        <input\n          placeholder=\"Due Date\"\n          value={dueDate}\n          onChange={(e) => updateTodo('dueDate', e.target.value)}\n        />\n        <input\n          placeholder=\"Skill\"\n          value={skill}\n          onChange={(e) => updateTodo('skill', e.target.value)}\n        />\n        <div style={{ display: 'inline-block', float: 'right' }}>\n          <button onClick={() => toggleTodo(index)}>Toggle</button>\n          <button onClick={() => deleteTodo(index)}>Delete</button>\n        </div>\n      </div>\n    );\n  };"],"mappings":";;;AAAA,MAAMA,QAAQ,GAAGC,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,IAAI;IAAEC,UAAU;IAAEC,UAAU;IAAEC;EAAM,CAAC,GAAAL,IAAA;EACrD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAACN,IAAI,CAACI,OAAO,CAAC;EACpD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAACN,IAAI,CAACO,KAAK,CAAC;EAE9C,MAAME,UAAU,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACnC,IAAID,KAAK,KAAK,SAAS,EAAE;MACvBL,UAAU,CAACM,KAAK,CAAC;IACnB,CAAC,MAAM,IAAID,KAAK,KAAK,OAAO,EAAE;MAC5BF,QAAQ,CAACG,KAAK,CAAC;IACjB;IACAX,IAAI,CAACU,KAAK,CAAC,GAAGC,KAAK;EACrB,CAAC;EAED,oBACEC,OAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBF,OAAA;MACEC,SAAS,EAAC,WAAW;MACrBE,KAAK,EAAE;QAAEC,cAAc,EAAEhB,IAAI,CAACiB,SAAS,GAAG,cAAc,GAAG;MAAG,CAAE;MAAAH,QAAA,EAE/Dd,IAAI,CAACkB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN,eACNV,OAAA;MAAAE,QAAA,EAAMd,IAAI,CAACuB;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC7BV,OAAA;MACEY,WAAW,EAAC,UAAU;MACtBb,KAAK,EAAEP,OAAQ;MACfqB,QAAQ,EAAGC,CAAC,IAAKjB,UAAU,CAAC,SAAS,EAAEiB,CAAC,CAACC,MAAM,CAAChB,KAAK;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvD,eACFV,OAAA;MACEY,WAAW,EAAC,OAAO;MACnBb,KAAK,EAAEJ,KAAM;MACbkB,QAAQ,EAAGC,CAAC,IAAKjB,UAAU,CAAC,OAAO,EAAEiB,CAAC,CAACC,MAAM,CAAChB,KAAK;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrD,eACFV,OAAA;MAAKG,KAAK,EAAE;QAAEa,OAAO,EAAE,cAAc;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAf,QAAA,gBACtDF,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAM7B,UAAU,CAACE,KAAK,CAAE;QAAAW,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACzDV,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAM5B,UAAU,CAACC,KAAK,CAAE;QAAAW,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACvB,EAAA,CAtCEF,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}