{"ast":null,"code":"var _jsxFileName = \"/Users/workalexandr/Documents/GitHub/-Skill_base_app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport TodoList from './TodoList';\nimport WindRose from './WindRose';\nimport './App.css';\nimport TaskModal from './components/TaskModal'; // Import the TaskModal component at the top of the file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSkills = [{\n  skill: 'Skill 1',\n  value: 100\n}, {\n  skill: 'Skill 2',\n  value: 200\n}, {\n  skill: 'Skill 3',\n  value: 300\n}, {\n  skill: 'Skill 4',\n  value: 0\n}];\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [skillsData, setSkillsData] = useState(defaultSkills);\n  const [projects, setProjects] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [selectedTaskIndex, setSelectedTaskIndex] = useState(-1);\n  const toggleTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].completed = !newTodos[index].completed;\n    setTodos(newTodos);\n  };\n  const deleteTodo = index => {\n    const newTodos = todos.filter((_, i) => i !== index);\n    setTodos(newTodos);\n  };\n  const addProject = projectName => {\n    setProjects([...projects, {\n      name: projectName,\n      tasks: []\n    }]);\n  };\n  const updateProject = (index, projectName) => {\n    const updatedProjects = [...projects];\n    updatedProjects[index].name = projectName;\n    setProjects(updatedProjects);\n  };\n  const deleteProject = index => {\n    setProjects(projects.filter((_, i) => i !== index));\n  };\n  const addLabel = labelName => {\n    setLabels([...labels, {\n      name: labelName\n    }]);\n  };\n  const updateLabel = (index, labelName) => {\n    const updatedLabels = [...labels];\n    updatedLabels[index].name = labelName;\n    setLabels(updatedLabels);\n  };\n  const deleteLabel = index => {\n    setLabels(labels.filter((_, i) => i !== index));\n  };\n  useEffect(() => {\n    const updateSkillsData = () => {\n      const skillMap = {\n        ...defaultSkills.reduce((acc, skill) => ({\n          ...acc,\n          [skill.skill]: {\n            ...skill,\n            taskCount: 0\n          }\n        }), {})\n      };\n      todos.filter(todo => todo.skill || todo.project || todo.label).forEach(todo => {\n        // ... existing code\n\n        if (todo.project) {\n          skillMap[todo.project].taskCount++;\n          if (todo.completed) {\n            skillMap[todo.project].value += 100;\n          }\n        }\n        if (todo.label) {\n          skillMap[todo.label].taskCount++;\n          if (todo.completed) {\n            skillMap[todo.label].value += 100;\n          }\n        }\n      });\n      const skills = Object.values(skillMap);\n      //const maxValue = Math.max(...skills.map((skillData) => skillData.value));\n\n      const normalizedSkills = skills.map(skillData => ({\n        ...skillData,\n        value: skillData.taskCount === 0 ? skillData.value : skillData.value * 100 / (skillData.taskCount * 100)\n      }));\n      setSkillsData(normalizedSkills);\n    };\n    updateSkillsData();\n  }, [todos, projects, labels]); // Update this line\n\n  const updateTodo = (index, field, value) => {\n    const newTodos = [...todos];\n    newTodos[index][field] = value;\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TodoList\",\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          setTodos: setTodos,\n          updateTodo: updateTodo,\n          toggleTodo: toggleTodo,\n          deleteTodo: deleteTodo,\n          projects: projects,\n          labels: labels,\n          setSelectedTaskIndex: setSelectedTaskIndex // Add this line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"WindRose\",\n        children: /*#__PURE__*/_jsxDEV(WindRose, {\n          data: skillsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n        selectedTaskIndex: selectedTaskIndex,\n        todos: todos,\n        setSelectedTaskIndex: setSelectedTaskIndex,\n        updateTodo: updateTodo,\n        toggleTodo: toggleTodo,\n        deleteTodo: deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uXnUkka3+BtFaIS1rrevY3oLTF4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","TodoList","WindRose","TaskModal","jsxDEV","_jsxDEV","defaultSkills","skill","value","App","_s","todos","setTodos","skillsData","setSkillsData","projects","setProjects","labels","setLabels","selectedTaskIndex","setSelectedTaskIndex","toggleTodo","index","newTodos","completed","deleteTodo","filter","_","i","addProject","projectName","name","tasks","updateProject","updatedProjects","deleteProject","addLabel","labelName","updateLabel","updatedLabels","deleteLabel","updateSkillsData","skillMap","reduce","acc","taskCount","todo","project","label","forEach","skills","Object","values","normalizedSkills","map","skillData","updateTodo","field","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/Users/workalexandr/Documents/GitHub/-Skill_base_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport TodoList from './TodoList';\nimport WindRose from './WindRose';\nimport './App.css';\nimport TaskModal from './components/TaskModal'; // Import the TaskModal component at the top of the file\n\nconst defaultSkills = [\n  { skill: 'Skill 1', value: 100 },\n  { skill: 'Skill 2', value: 200 },\n  { skill: 'Skill 3', value: 300 },\n  { skill: 'Skill 4', value: 0 },\n];\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [skillsData, setSkillsData] = useState(defaultSkills);\n  const [projects, setProjects] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [selectedTaskIndex, setSelectedTaskIndex] = useState(-1);\n\n  const toggleTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].completed = !newTodos[index].completed;\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (index) => {\n    const newTodos = todos.filter((_, i) => i !== index);\n    setTodos(newTodos);\n  };\n\n  const addProject = (projectName) => {\n    setProjects([...projects, { name: projectName, tasks: [] }]);\n  };\n\n  const updateProject = (index, projectName) => {\n    const updatedProjects = [...projects];\n    updatedProjects[index].name = projectName;\n    setProjects(updatedProjects);\n  };\n\n  const deleteProject = (index) => {\n    setProjects(projects.filter((_, i) => i !== index));\n  };\n\n  const addLabel = (labelName) => {\n    setLabels([...labels, { name: labelName }]);\n  };\n\n  const updateLabel = (index, labelName) => {\n    const updatedLabels = [...labels];\n    updatedLabels[index].name = labelName;\n    setLabels(updatedLabels);\n  };\n\n  const deleteLabel = (index) => {\n    setLabels(labels.filter((_, i) => i !== index));\n  };\n\n  useEffect(() => {\n    const updateSkillsData = () => {\n      const skillMap = {\n        ...defaultSkills.reduce(\n          (acc, skill) => ({\n            ...acc,\n            [skill.skill]: { ...skill, taskCount: 0 },\n          }),\n          {}\n        ),\n      };\n\n      todos\n    .filter((todo) => todo.skill || todo.project || todo.label)\n    .forEach((todo) => {\n      // ... existing code\n\n      if (todo.project) {\n        skillMap[todo.project].taskCount++;\n        if (todo.completed) {\n          skillMap[todo.project].value += 100;\n        }\n      }\n\n      if (todo.label) {\n        skillMap[todo.label].taskCount++;\n        if (todo.completed) {\n          skillMap[todo.label].value += 100;\n        }\n      }\n    });\n\n      const skills = Object.values(skillMap);\n      //const maxValue = Math.max(...skills.map((skillData) => skillData.value));\n\n      const normalizedSkills = skills.map((skillData) => ({\n        ...skillData,\n        value:\n          skillData.taskCount === 0\n            ? skillData.value\n            : (skillData.value * 100) / (skillData.taskCount * 100),\n      }));\n\n      setSkillsData(normalizedSkills);\n    };\n\n    updateSkillsData();\n  }, [todos, projects, labels]); // Update this line\n\n  const updateTodo = (index, field, value) => {\n    const newTodos = [...todos];\n    newTodos[index][field] = value;\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"main-content\">\n        <div className=\"TodoList\">\n          <TodoList\n            todos={todos}\n            setTodos={setTodos}\n            updateTodo={updateTodo}\n            toggleTodo={toggleTodo}\n            deleteTodo={deleteTodo}\n            projects={projects}\n            labels={labels}\n            setSelectedTaskIndex={setSelectedTaskIndex} // Add this line\n          />\n        </div>\n        <div className=\"WindRose\">\n          <WindRose data={skillsData} />\n        </div>\n        <TaskModal\n  selectedTaskIndex={selectedTaskIndex}\n  todos={todos}\n  setSelectedTaskIndex={setSelectedTaskIndex}\n  updateTodo={updateTodo}\n  toggleTodo={toggleTodo}\n  deleteTodo={deleteTodo}\n/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}