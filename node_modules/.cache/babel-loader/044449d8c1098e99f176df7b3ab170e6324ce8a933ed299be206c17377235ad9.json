{"ast":null,"code":"var _jsxFileName = \"/Users/workalexandr/Documents/GitHub/-Skill_base_app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport TodoList from './TodoList';\nimport WindRose from './WindRose';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSkills = [{\n  skill: 'Skill 1',\n  value: 100\n}, {\n  skill: 'Skill 2',\n  value: 200\n}, {\n  skill: 'Skill 3',\n  value: 300\n}, {\n  skill: 'Skill 4',\n  value: 0\n}];\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [skillsData, setSkillsData] = useState(defaultSkills);\n  const [projects, setProjects] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [selectedTaskIndex, setSelectedTaskIndex] = useState(-1);\n  const addProject = projectName => {\n    setProjects([...projects, {\n      name: projectName,\n      tasks: []\n    }]);\n  };\n  const updateProject = (index, projectName) => {\n    const updatedProjects = [...projects];\n    updatedProjects[index].name = projectName;\n    setProjects(updatedProjects);\n  };\n  const deleteProject = index => {\n    setProjects(projects.filter((_, i) => i !== index));\n  };\n  const addLabel = labelName => {\n    setLabels([...labels, {\n      name: labelName\n    }]);\n  };\n  const updateLabel = (index, labelName) => {\n    const updatedLabels = [...labels];\n    updatedLabels[index].name = labelName;\n    setLabels(updatedLabels);\n  };\n  const deleteLabel = index => {\n    setLabels(labels.filter((_, i) => i !== index));\n  };\n  useEffect(() => {\n    const updateSkillsData = () => {\n      const skillMap = {\n        ...defaultSkills.reduce((acc, skill) => ({\n          ...acc,\n          [skill.skill]: {\n            ...skill,\n            taskCount: 0\n          }\n        }), {})\n      };\n      todos.filter(todo => todo.skill || todo.project || todo.label).forEach(todo => {\n        // ... existing code\n\n        if (todo.project) {\n          skillMap[todo.project].taskCount++;\n          if (todo.completed) {\n            skillMap[todo.project].value += 100;\n          }\n        }\n        if (todo.label) {\n          skillMap[todo.label].taskCount++;\n          if (todo.completed) {\n            skillMap[todo.label].value += 100;\n          }\n        }\n      });\n      const skills = Object.values(skillMap);\n      //const maxValue = Math.max(...skills.map((skillData) => skillData.value));\n\n      const normalizedSkills = skills.map(skillData => ({\n        ...skillData,\n        value: skillData.taskCount === 0 ? skillData.value : skillData.value * 100 / (skillData.taskCount * 100)\n      }));\n      setSkillsData(normalizedSkills);\n    };\n    updateSkillsData();\n  }, [todos]);\n  const updateTodo = (index, field, value) => {\n    const newTodos = [...todos];\n    newTodos[index][field] = value;\n    setTodos(newTodos);\n  };\n  const toggleTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].completed = !newTodos[index].completed;\n    setTodos(newTodos);\n  };\n  const deleteTodo = index => {\n    const newTodos = todos.filter((_, i) => i !== index);\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TodoList\",\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          setTodos: setTodos,\n          updateTodo: updateTodo,\n          toggleTodo: toggleTodo,\n          deleteTodo: deleteTodo,\n          projects: projects,\n          labels: labels\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"WindRose\",\n        children: /*#__PURE__*/_jsxDEV(WindRose, {\n          data: skillsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n        selectedTaskIndex: selectedTaskIndex,\n        todos: todos,\n        setSelectedTaskIndex: setSelectedTaskIndex\n        // Pass other necessary props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uXnUkka3+BtFaIS1rrevY3oLTF4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","TodoList","WindRose","jsxDEV","_jsxDEV","defaultSkills","skill","value","App","_s","todos","setTodos","skillsData","setSkillsData","projects","setProjects","labels","setLabels","selectedTaskIndex","setSelectedTaskIndex","addProject","projectName","name","tasks","updateProject","index","updatedProjects","deleteProject","filter","_","i","addLabel","labelName","updateLabel","updatedLabels","deleteLabel","updateSkillsData","skillMap","reduce","acc","taskCount","todo","project","label","forEach","completed","skills","Object","values","normalizedSkills","map","skillData","updateTodo","field","newTodos","toggleTodo","deleteTodo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","TaskModal","_c","$RefreshReg$"],"sources":["/Users/workalexandr/Documents/GitHub/-Skill_base_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport TodoList from './TodoList';\nimport WindRose from './WindRose';\nimport './App.css';\n\nconst defaultSkills = [\n  { skill: 'Skill 1', value: 100 },\n  { skill: 'Skill 2', value: 200 },\n  { skill: 'Skill 3', value: 300 },\n  { skill: 'Skill 4', value: 0 },\n];\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [skillsData, setSkillsData] = useState(defaultSkills);\n  const [projects, setProjects] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [selectedTaskIndex, setSelectedTaskIndex] = useState(-1);\n\n  const addProject = (projectName) => {\n    setProjects([...projects, { name: projectName, tasks: [] }]);\n  };\n\n  const updateProject = (index, projectName) => {\n    const updatedProjects = [...projects];\n    updatedProjects[index].name = projectName;\n    setProjects(updatedProjects);\n  };\n\n  const deleteProject = (index) => {\n    setProjects(projects.filter((_, i) => i !== index));\n  };\n\n  const addLabel = (labelName) => {\n    setLabels([...labels, { name: labelName }]);\n  };\n\n  const updateLabel = (index, labelName) => {\n    const updatedLabels = [...labels];\n    updatedLabels[index].name = labelName;\n    setLabels(updatedLabels);\n  };\n\n  const deleteLabel = (index) => {\n    setLabels(labels.filter((_, i) => i !== index));\n  };\n\n  useEffect(() => {\n    const updateSkillsData = () => {\n      const skillMap = {\n        ...defaultSkills.reduce(\n          (acc, skill) => ({\n            ...acc,\n            [skill.skill]: { ...skill, taskCount: 0 },\n          }),\n          {}\n        ),\n      };\n\n      todos\n    .filter((todo) => todo.skill || todo.project || todo.label)\n    .forEach((todo) => {\n      // ... existing code\n\n      if (todo.project) {\n        skillMap[todo.project].taskCount++;\n        if (todo.completed) {\n          skillMap[todo.project].value += 100;\n        }\n      }\n\n      if (todo.label) {\n        skillMap[todo.label].taskCount++;\n        if (todo.completed) {\n          skillMap[todo.label].value += 100;\n        }\n      }\n    });\n\n      const skills = Object.values(skillMap);\n      //const maxValue = Math.max(...skills.map((skillData) => skillData.value));\n\n      const normalizedSkills = skills.map((skillData) => ({\n        ...skillData,\n        value:\n          skillData.taskCount === 0\n            ? skillData.value\n            : (skillData.value * 100) / (skillData.taskCount * 100),\n      }));\n\n      setSkillsData(normalizedSkills);\n    };\n\n    updateSkillsData();\n  }, [todos]);\n\n  const updateTodo = (index, field, value) => {\n    const newTodos = [...todos];\n    newTodos[index][field] = value;\n    setTodos(newTodos);\n  };\n\n  const toggleTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].completed = !newTodos[index].completed;\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (index) => {\n    const newTodos = todos.filter((_, i) => i !== index);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"main-content\">\n        <div className=\"TodoList\">\n          <TodoList\n            todos={todos}\n            setTodos={setTodos}\n            updateTodo={updateTodo}\n            toggleTodo={toggleTodo}\n            deleteTodo={deleteTodo}\n            projects={projects}\n            labels={labels}\n          />\n        </div>\n        <div className=\"WindRose\">\n          <WindRose data={skillsData} />\n        </div>\n        <TaskModal\n        selectedTaskIndex={selectedTaskIndex}\n        todos={todos}\n        setSelectedTaskIndex={setSelectedTaskIndex}\n        // Pass other necessary props\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}